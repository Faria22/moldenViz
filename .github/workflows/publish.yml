name: Publish to PyPI

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  release:
    name: Build and publish
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Hatch
        run: |
          python -m pip install --upgrade pip
          python -m pip install hatch

      - name: Determine package version
        id: package_version
        run: |
          VERSION=$(hatch run python -c "from moldenViz.__about__ import __version__; print(__version__)")
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"

      - name: Verify package version matches tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          TAG_VERSION_STRIPPED=${TAG_VERSION#v}
          PACKAGE_VERSION=$(hatch run python -c "from moldenViz.__about__ import __version__; print(__version__)")
          if [ "$TAG_VERSION_STRIPPED" != "$PACKAGE_VERSION" ]; then
            echo "Tag version ($TAG_VERSION) does not match package version ($PACKAGE_VERSION)"
            exit 1
          fi
          echo "Version check passed: $PACKAGE_VERSION"

      - name: Verify PyPI credentials
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          if [ -z "${PYPI_TOKEN}" ]; then
            echo "PYPI_TOKEN secret is not configured. Add it in the repository settings before tagging a release." >&2
            exit 1
          fi

      - name: Run tests
        run: hatch run all

      - name: Build distributions
        run: hatch build

      - name: Publish to PyPI
        env:
          HATCH_INDEX_USER: __token__
          HATCH_INDEX_AUTH: ${{ secrets.PYPI_TOKEN }}
        run: hatch publish
